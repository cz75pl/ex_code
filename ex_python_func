import numpy as np

class FunkcjaKwadratowa:
    
    def __init__(self, a, b, c):
        self.a = a
        self.b = b
        self.c = c
        
    def make_function(self):
        print(f'{self.a} * x ** 2 + {self.b} * x + {self.c}')
        
    def rozwiazanie(self):
        if self.a == 0 and self.b == 0 and self.c == 0:
            print('Równanie tożsamociowe')
        elif self.a == 0 and self.b == 0 and self.c != 0:
            print('Rówanie sprzeczne')
        elif self.a == 0 and self.b != 0:
            x = - self.c / self.b
            print(x)
        elif self.a != 0:
            delta = self.b ** 2 - 4 * self.a * self.c
            if delta > 0:
                sqrt_delta = np.sqrt(delta)
                x1 = (- self.b - sqrt_delta) / (2 * self.a)
                x2 = (- self.b + sqrt_delta) / (2 * self.a)
                print(x1, x2)
            elif delta == 0:
                x = - self.b / (2 * self.a)
                print(x)
            else:
                print('Brak rozwiązań')
        else:
            raise Error 
# %% ---------------------------------------
omega = {(x, y, z) for x in range(1, 7) for y in range(1, 7) for z in range(1, 7)}
a = {(x, y, z) for x, y, z in omega if x % 2 != 0 and y % 2 != 0 and z % 2 != 0}
prob = round(len(a) / len(omega), 3)
print(f'P-stwo: {prob}')
# %% --------------------------------------
import os
with open('.\eletrohurt.txt', 'r') as file:
    lines = file.read().splitlines()
    
close = []
for idx, line in enumerate(lines):
    if idx > 0:
        close.append(int(line.split(',')[-2]))
close_avg = sum(close) / len(close)
print(f'3-dniowa srednia cena zamknięcia: {close_avg:.2f}')
#%% ----------------------------------------
with open(r'.\indeksy.txt', 'r') as file:
    lines = file.read().splitlines()
indexes = [index for index in lines if index.startswith('WIG')]
print(indexes)
#%% ----------------------------------------
with open(r'.\plw_d.csv', 'r') as file:
    content = file.read().splitlines()
 
data = [(line.split(',')) for line in content]
result = {
    data[0][0]: [data[1:][i][0] for i in range(len(data) - 1)],
    data[0][3]: [float(data[1:][i][1]) for i in range(len(data) - 1)]
    
    }
print(result)
#%% -------------------------------------------
with open(r'.\plw_d.csv', 'r') as file:
    content = file.read().splitlines()
  
volumes = [line.split(',')[-1] for line in content][1:]
print(volumes)
volumes = [int(vol) for vol in volumes]
max_vol = max(volumes)
print(f'Max Vol: {max_vol}')
#%% -------------------------------------------
with open(r'.\plw_d.csv', 'r') as file:
    content = file.read().splitlines()
    
data = [(line.split(',')[0], line.split(',')[-1]) for line in content][1:]
data = [(val[0], int(val[1])) for val in data]
max_vol = max([val[1] for val in data])
max_date = list(filter(lambda val: val[1] == max_vol, data))[0][0]
print(f'Data: {max_date}')
with open(r'.\plw_d.txt', 'w') as file:
    file.write(str(max_date))
   
